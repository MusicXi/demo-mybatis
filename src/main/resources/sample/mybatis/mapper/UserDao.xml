<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace用于接口绑定-->
<mapper namespace="sample.mybatis.mapper.UserDao">
	
	<resultMap id="userResult" type="User">
		<id property="id" column="id" />
		<result property="name" column="name" />
		<result property="username" column="username" />
		<result property="password" column="password" />
		<collection property="roleList" ofType="Role">
			<id property="roleId" column="roleList.roleId" />
			<id property="name" column="roleList.name"/>
			<id property="role" column="roleList.role"/>
		</collection>
	</resultMap>
	
	<resultMap id="DataResultMap" type="java.util.Map">
	    <id column="user_id" property="userId" jdbcType="VARCHAR" />
	    <result column="organization_id" property="organizationId" jdbcType="VARCHAR" />
	    <result column="username" property="username" jdbcType="VARCHAR" />
	    <result column="name" property="name" jdbcType="VARCHAR" />
	    <result column="password" property="password" jdbcType="VARCHAR" />
	    <result column="sex" property="sex" jdbcType="CHAR" />
	    <result column="phone" property="phone" jdbcType="VARCHAR" />
	    <result column="email" property="email" jdbcType="VARCHAR" />
	    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
	    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
	    <result column="deperment.name" property="department.name" jdbcType="VARCHAR" />
	    <result column="company.name" property="company.name" jdbcType="VARCHAR" />
	</resultMap>	
	
	<sql id="Base_Column_List" >
   		t.user_id, 
   		t.organization_id, 
   		t.username, 
   		t.name, 
   		t.password, 
   		t.sex, 
   		t.phone, 
   		t.email, 
   		t.create_date, 
    	t.create_by
  	</sql>
  	<select id="selectMapList" resultMap="DataResultMap">
  		select 
	    <include refid="Base_Column_List" />,
	    b.name as 'deperment.name',
	    c.name as 'company.name'
	    from sys_user t
		left join sys_organization b on t.organization_id=b.organization_id
		left join sys_organization c on b.organization_pid=c.organization_id
	    <!-- where user_id = #{userId,jdbcType=VARCHAR}  -->
  	</select>
  	
	<select id="selectMapListByPage" resultMap="DataResultMap">
  		select 
		<include refid="Base_Column_List" />,
	    b.name as 'deperment.name',
	    c.name as 'company.name'
	    from sys_user t
		left join sys_organization b on t.organization_id=b.organization_id
		left join sys_organization c on b.organization_pid=c.organization_id
		<where>
			<!--
			<if test="user.id != null" >
		     	and t.user_id like CONCAT('%',#{user.id},'%') ,
			</if>
			-->
			<if test="user.organizationId != null and user.organizationId !='' " >
		        <!--and t.organization_id like CONCAT('%',#{user.organizationId},'%')-->
		        and find_in_set(t.organization_id,#{user.organizationId})
			</if>
			<if test="user.username != null" >
		        and t.username like CONCAT('%',#{user.username},'%')
			</if>
			<if test="user.name != null" >
		        and t.name like CONCAT('%',#{user.name},'%')
			</if>
			<if test="user.password != null" >
		        and t.password=#{user.password}
			</if>
			<if test="user.sex != null" >
		        and t.sex=#{user.sex}
			</if>
			<if test="user.phone != null" >
		        and t.phone like CONCAT('%',#{user.phone},'%')
			</if>
			<if test="email != null" >
		        and t.email like CONCAT('%',#{user.email},'%')
			</if>
			<!--
				  <if test="createDate != null" >
					create_date,
				  </if>
				  -->
			<if test="user.createBy != null">
		        and t.create_by=#{user.createBy}
			</if>
		</where>
		<if test="page.sortName != null and page.sortOrder!=null">
    		order by ${page.sortName} ${page.sortOrder} 
		</if>
	</select>
	
	<select id="findByLogin"   resultType="User">
		select a.user_id id, 
			   a.name, 
			   a.password 
		from sys_user a
		where a.name=#{0} and a.password=#{1}
	</select>
	
	<!--
	<select id="findByUsername"   resultType="User">
		select a.user_id id, 
			   a.name,
			   a.password,
			   a.username
		from sys_user a
		where a.username=#{username}
	</select>
	-->
	
	<select id="findByUsername"   resultMap="userResult">
		select a.user_id id, 
			   a.name,
			   a.password,
			   a.username,
			   c.role_id as "roleList.roleId",
			   c.name as "roleList.name",
			   c.role as "roleList.role"
		from sys_user a
		join sys_user_role b on a.user_id=b.user_id
		join sys_role c on c.role_id=b.role_id
		where a.username=#{username}
	</select>
	<select id="findListByPage" resultType="User">
		select  a.user_id id,
				a.name,
				a.username,
				a.password,
				a.phone,
				a.sex,
				a.email,
				b.organization_id as "department.id",
				b.name as "department.name",
				c.organization_id as "company.id",
				c.name as "company.name"	
		from sys_user a
		join sys_organization b on a.organization_id=b.organization_id
		join sys_organization c on b.organization_pid=c.organization_id
		<if test="company != null and company.ids !=null ">
			where a.user_id in
			<foreach item="item" index="index" collection="company.ids" open="(" separator="," close=")">
	            '${item}'
	        </foreach>
		</if>
	</select>
	
	<select id="findAllByPage" resultType="User">
		select  a.user_id id,
				a.name,
				a.username,
				a.password,
				a.phone,
				a.sex,
				a.email,
				b.organization_id as "department.id",
				b.name as "department.name",
				c.organization_id as "company.id",
				c.name as "company.name"	
		from sys_user a
		left join sys_organization b on a.organization_id=b.organization_id
		left join sys_organization c on b.organization_pid=c.organization_id

	</select>
	
	<select id="findAll" resultType="User">
		select  a.user_id id,
				a.name,
				a.username,
				a.password,
				a.email,
				a.sex,
				a.phone,
				a.create_date as "createDate"
		from sys_user a

		
	</select>
	
	<delete id="deleteByPrimaryKey">
		delete from sys_user where user_id=#{id}
	</delete>
	
	<insert id="insert" parameterType="User" >
	    insert into sys_user (
	    	user_id, 
	    	organization_id, 
	    	username, 
	      	name, 
	      	password, 
	      	sex, 
	      	phone, 
	      	email, 
	      	create_date, 
	      	create_by
	      )values (
	      	#{id,jdbcType=VARCHAR}, 
	      	#{organizationId,jdbcType=VARCHAR}, 
	      	#{username,jdbcType=VARCHAR}, 
	      	#{name,jdbcType=VARCHAR}, 
	      	#{password,jdbcType=VARCHAR}, 
	      	#{sex,jdbcType=CHAR}, 
	      	#{phone,jdbcType=VARCHAR}, 
	      	#{email,jdbcType=VARCHAR}, 
	      	#{createDate,jdbcType=TIMESTAMP}, 
	      	#{createBy.id,jdbcType=VARCHAR}
	      )
  	</insert>
  	
  	<insert id="insertByBatch" parameterType="java.util.List">
	    insert into sys_user (
	    	user_id, 
	    	organization_id, 
	    	username, 
	      	name, 
	      	password, 
	      	sex, 
	      	phone, 
	      	email, 
	      	create_date
	    )values 
	    <foreach collection="list" item="item" index="index" separator=",">
	       (
	      	#{item.id,jdbcType=VARCHAR}, 
	      	#{item.organizationId,jdbcType=VARCHAR}, 
	      	#{item.username,jdbcType=VARCHAR}, 
	      	#{item.name,jdbcType=VARCHAR}, 
	      	#{item.password,jdbcType=VARCHAR}, 
	      	#{item.sex,jdbcType=CHAR}, 
	      	#{item.phone,jdbcType=VARCHAR}, 
	      	#{item.email,jdbcType=VARCHAR}, 
	      	#{item.createDate,jdbcType=TIMESTAMP}
	       )
	    </foreach>
  	</insert>
  	
  	<insert id="insertSelective" parameterType="User" >
	    insert into sys_user
	    <trim prefix="(" suffix=")" suffixOverrides="," >
	      <if test="id != null" >
	        user_id,
	      </if>
	      <if test="organizationId != null and organizationId !='' " >
	        organization_id,
	      </if>
	      <if test="username != null" >
	        username,
	      </if>
	      <if test="name != null" >
	        name,
	      </if>
	      <if test="password != null" >
	        password,
	      </if>
	      <if test="sex != null" >
	        sex,
	      </if>
	      <if test="phone != null" >
	        phone,
	      </if>
	      <if test="email != null" >
	        email,
	      </if>
	      <if test="createDate != null" >
	        create_date,
	      </if>
	      <if test="createBy != null">
	        create_by,
	      </if>
	    </trim>
	    <trim prefix="values (" suffix=")" suffixOverrides="," >
	      <if test="id != null" >
	        #{id,jdbcType=VARCHAR},
	      </if>
	      <if test="organizationId != null and organizationId !='' " >
	        #{organizationId,jdbcType=VARCHAR},
	      </if>
	      <if test="username != null" >
	        #{username,jdbcType=VARCHAR},
	      </if>
	      <if test="name != null" >
	        #{name,jdbcType=VARCHAR},
	      </if>
	      <if test="password != null" >
	        #{password,jdbcType=VARCHAR},
	      </if>
	      <if test="sex != null" >
	        #{sex,jdbcType=CHAR},
	      </if>
	      <if test="phone != null" >
	        #{phone,jdbcType=VARCHAR},
	      </if>
	      <if test="email != null" >
	        #{email,jdbcType=VARCHAR},
	      </if>
	      <if test="createDate != null" >
	        #{createDate,jdbcType=TIMESTAMP},
	      </if>
	      <if test="createBy != null">
	        #{createBy,jdbcType=VARCHAR},
	      </if>
	    </trim>
  </insert>
  
   <update id="updateByPrimaryKeySelective" parameterType="User" >
    update sys_user
    <set >
      <if test="organizationId != null and organizationId!='' " >
        organization_id = #{organizationId,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="User" >
    update sys_user
    set organization_id = #{department.id,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_by = #{createBy.id,jdbcType=VARCHAR}
    where user_id = #{id,jdbcType=VARCHAR}
  </update>
	
	<select id="countByName" resultType="int">
		select count(a.name) from sys_user a where a.name=#{name} 
	</select>
	
	<select id="findAllTest" resultType="User">
		select  a.user_id id,
				a.name,
				a.username
		from sys_user a
		where user_id in
		<foreach item="item" index="index" collection="company.ids" open="(" separator="," close=")">
            #{item}
        </foreach>
	</select>
</mapper>